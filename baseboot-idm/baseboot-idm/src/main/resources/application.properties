#server.port=0
spring.mvc.throw-exception-if-no-handler-found=true
spring.jndi.ignore=true
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS = false

# ===============================
# = CACHE
# ===============================

spring.cache.type=redis
spring.redis.host=10.10.11.30
spring.redis.port=6379

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
#spring.datasource.url = jdbc:mysql://10.10.2.101:3306/apjatigo_dev?zeroDateTimeBehavior=convertToNull

# Username and password
#spring.datasource.username = root
#spring.datasource.password = Bestinet2015

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

####### LOGGING
#logging.config= # Location of the logging configuration file. For instance `classpath:logback.xml` for Logback
#logging.config = logback.xml
#logging.exception-conversion-word=%wEx # Conversion word used when logging exceptions.
# Log file name. For instance `myapp.log`
#logging.file=apjatigo-sgw.log 
# Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`
#logging.level.ROOT=INFO 
#logging.level.org.springframework = OFF
#logging.level.com.bestinet.apjatigo.idm = OFF
# Location of the log file. For instance `/var/log`
#logging.path=/var/log
# Appender pattern for output to the console. Only supported with the default logback setup.
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c{1}.%M:%L] - %m%n
# Appender pattern for output to the file. Only supported with the default logback setup.
#logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} %-5p [%c{1}.%M:%L] - %m%n
# Appender pattern for log level (default %5p). Only supported with the default logback setup.
#logging.pattern.level= 
# Register a shutdown hook for the logging system when it is initialized.
#logging.register-shutdown-hook=false 
